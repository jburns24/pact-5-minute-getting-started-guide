name: Provider Pact Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'provider/**'
      - '.github/workflows/pact-provider.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'provider/**'

jobs:
  provider-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Verify contract against provider
        env:
          PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_URL }}
          PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
        run: |
          # Create version based on git info
          GIT_COMMIT=$(git rev-parse HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

          # Start the provider API in the background
          npm run start:provider &
          
          # Give the provider time to start up
          sleep 5
          
          # Run the provider verification with Pact CLI
          docker run --rm --network host \
            -v ${PWD}:${PWD} \
            -w ${PWD} \
            -e PACT_BROKER_BASE_URL \
            -e PACT_BROKER_USERNAME \
            -e PACT_BROKER_PASSWORD \
            pactfoundation/pact-cli:latest \
            verify \
            --provider-base-url=http://localhost:3000 \
            --provider=GettingStartedOrderApi \
            --broker-url=${PACT_BROKER_BASE_URL} \
            --broker-username=${PACT_BROKER_USERNAME} \
            --broker-password=${PACT_BROKER_PASSWORD} \
            --publish-verification-results \
            --provider-app-version=${GIT_COMMIT} \
            --provider-branch=${GITHUB_REF_NAME}
      
      - name: Can I Deploy?
        env:
          PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_URL }}
          PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
        run: |
          GIT_COMMIT=$(git rev-parse HEAD)
          
          # Check if it's safe to deploy
          docker run --rm \
            -e PACT_BROKER_BASE_URL \
            -e PACT_BROKER_USERNAME \
            -e PACT_BROKER_PASSWORD \
            pactfoundation/pact-cli:latest \
            broker can-i-deploy \
            --pacticipant GettingStartedOrderApi \
            --version ${GIT_COMMIT} \
            --to production

      - name: Deploy
        if: success() && github.ref == 'refs/heads/main'
        run: |
          # Add your deployment script here
          # This is a placeholder for your actual deployment
          echo "Deploying GettingStartedOrderApi to production"
          
          # Example deployment mark command (records the deployment in Pact Broker)
          docker run --rm \
            -e PACT_BROKER_BASE_URL=${{ secrets.PACT_BROKER_URL }} \
            -e PACT_BROKER_USERNAME=${{ secrets.PACT_BROKER_USERNAME }} \
            -e PACT_BROKER_PASSWORD=${{ secrets.PACT_BROKER_PASSWORD }} \
            pactfoundation/pact-cli:latest \
            broker record-deployment \
            --pacticipant GettingStartedOrderApi \
            --version $(git rev-parse HEAD) \
            --environment production
